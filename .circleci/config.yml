version: 2.1

executors:
  nodeimage:
    docker:
      - image: cimg/node:16.14
    working_directory: ~/repo
    resource_class: xlarge
    
jobs:
  build:
    executor: nodeimage
    steps:
      - checkout
      - restore_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: package-cache-{{ checksum "package-lock.json" }}
          paths: 
            - package-lock.json
            - node_modules
      - restore_cache:
          key: solcache-{{ checksum "cache/solidity-files-cache.json" }}
      - run:
          name: Compile contracts
          command: npm run compile:hardhat
      - save_cache:
          key: solcache-{{ checksum "cache/solidity-files-cache.json" }}
          paths:
            - artifacts
            - cache/solidity-files-cache.json
            - types/contracts
      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./
  lint:
    working_directory: ~/repo
    executor: nodeimage
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run linter
          command: npm run lint
  test:
    working_directory: ~/repo
    executor: nodeimage
    parallelism: 16
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run tests
          command: |
            circleci tests glob "test/unit/**/*.ts" | circleci tests split --split-by=filesize > /tmp/tests-to-run
            npm run test:hardhat $(cat /tmp/tests-to-run)
      - store_test_results:
            path: test-results
      - store_artifacts:
            path: test-results

  test-forge:
    working_directory: ~/repo
    executor: nodeimage
    parallelism: 16
    steps:
      - attach_workspace:
          at: ./
      - checkout 
      - restore_cache: 
          keys: 
            - repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Setup env
          command: echo "export PATH=$PATH:$(pwd)/.circleci" >> /home/circleci/.bashrc
      - run:
          name: Finish setting up env
          command: echo "export PATH=$PATH:$(pwd)/.foundry/bin" >> /home/circleci/.bashrc
      - run: 
          name: Install Foundry
          command: curl -L https://foundry.paradigm.xyz | bash; source /home/circleci/.bashrc; $HOME/.foundry/bin/foundryup
      - run:
          name: Run tests
          command: |
            source /home/circleci/.bashrc
            export PATH=$PATH:/home/circleci/.foundry/bin; npm run clean && npm run compile && npm run test && npm run test:integration:latest

  e2e-test:
    working_directory: ~/repo
    executor: nodeimage
    parallelism: 16
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run end-to-end tests
          command: |
            circleci tests glob "test/integration/**/*.ts" | circleci tests split --split-by=filesize > /tmp/tests-to-run
            npm run test:e2e $(cat /tmp/tests-to-run)
      - store_test_results:
            path: test-results
      - store_artifacts:
            path: test-results

workflows:
  main:
    jobs:
      - build
      - lint: 
          requires:
            - build
      - test-forge:
          requires:
            - build          
      - test:
          requires:
            - build
      - e2e-test:
          requires:
            - build
